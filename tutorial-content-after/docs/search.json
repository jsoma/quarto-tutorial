[
  {
    "objectID": "notebook.html",
    "href": "notebook.html",
    "title": "This title goes at the top of the page",
    "section": "",
    "text": "Markdown is a way of writing text that allows you to add bold, links, images, etc, without using a tool like Google Docs or Word. For example, writing **text like this** becomes bold like this.\nIn Jupyter, we write code in the Markdown blocks, and then it shows up on the page as normal text.\n\n\nWe can also use Python blocks to run code. The code below prints Hello world.\n\nprint(\"Hello world\")\n\nHello world\n\n\nPretty fun, right? I’d like to think so.\n\n\n\nWhy does this matter? Later on, we’ll take a look at time in a Quarto Markdown file to compare to this Jupyter notebook.\n\nfrom datetime import datetime\n\nupdated_at = datetime.now().strftime(\"%X %x\")\nprint(\"This was run at\", updated_at)\n\nThis was run at 20:01:49 06/21/23\n\n\n\n\n\nWe can use pandas and matplotlib to create a simple plot.\n\n\n\n\n\n[notice] A new release of pip available: 22.3.1 -&gt; 23.1.2\n[notice] To update, run: pip install --upgrade pip\n\n\n\n\n\nWe’ll read in our data using pandas…\n\nimport pandas as pd\n\ndf = pd.read_csv(\"temperatures.csv\", parse_dates=['Date'])\ndf.head()\n\n\n\n\n\n\n\n\nDate\nAnomaly\n\n\n\n\n0\n1880-01-01\n-0.30\n\n\n1\n1880-02-01\n-0.21\n\n\n2\n1880-03-01\n-0.18\n\n\n3\n1880-04-01\n-0.27\n\n\n4\n1880-05-01\n-0.14\n\n\n\n\n\n\n\n…and then plot it using matplotlib.\n\ndf.plot(x='Date', y='Anomaly')\n\n&lt;Axes: xlabel='Date'&gt;\n\n\n\n\n\n\n\n\n\nWe’re going to include the command to publish in here instead of running it from the command line.\n\n!quarto render notebook.ipynb --to html --embed-resources\n\npandoc --embed-resources\n  to: html\n  output-file: notebook.html\n  standalone: true\n  embed-resources: true\n  section-divs: true\n  html-math-method: mathjax\n  wrap: none\n  default-image-extension: png\n  toc: true\n  \nmetadata\n  document-css: false\n  link-citations: true\n  date-format: long\n  lang: en\n  title: This title goes at the top of the page\n  linkcolor: salmon\n  theme: cosmo\n  \nOutput created: notebook.html"
  },
  {
    "objectID": "notebook.html#running-code",
    "href": "notebook.html#running-code",
    "title": "This title goes at the top of the page",
    "section": "",
    "text": "We can also use Python blocks to run code. The code below prints Hello world.\n\nprint(\"Hello world\")\n\nHello world\n\n\nPretty fun, right? I’d like to think so."
  },
  {
    "objectID": "notebook.html#keeping-track-of-time",
    "href": "notebook.html#keeping-track-of-time",
    "title": "This title goes at the top of the page",
    "section": "",
    "text": "Why does this matter? Later on, we’ll take a look at time in a Quarto Markdown file to compare to this Jupyter notebook.\n\nfrom datetime import datetime\n\nupdated_at = datetime.now().strftime(\"%X %x\")\nprint(\"This was run at\", updated_at)\n\nThis was run at 20:01:49 06/21/23"
  },
  {
    "objectID": "notebook.html#pandas-and-matplotlib",
    "href": "notebook.html#pandas-and-matplotlib",
    "title": "This title goes at the top of the page",
    "section": "",
    "text": "We can use pandas and matplotlib to create a simple plot.\n\n\n\n\n\n[notice] A new release of pip available: 22.3.1 -&gt; 23.1.2\n[notice] To update, run: pip install --upgrade pip\n\n\n\n\n\nWe’ll read in our data using pandas…\n\nimport pandas as pd\n\ndf = pd.read_csv(\"temperatures.csv\", parse_dates=['Date'])\ndf.head()\n\n\n\n\n\n\n\n\nDate\nAnomaly\n\n\n\n\n0\n1880-01-01\n-0.30\n\n\n1\n1880-02-01\n-0.21\n\n\n2\n1880-03-01\n-0.18\n\n\n3\n1880-04-01\n-0.27\n\n\n4\n1880-05-01\n-0.14\n\n\n\n\n\n\n\n…and then plot it using matplotlib.\n\ndf.plot(x='Date', y='Anomaly')\n\n&lt;Axes: xlabel='Date'&gt;"
  },
  {
    "objectID": "notebook.html#publishing",
    "href": "notebook.html#publishing",
    "title": "This title goes at the top of the page",
    "section": "",
    "text": "We’re going to include the command to publish in here instead of running it from the command line.\n\n!quarto render notebook.ipynb --to html --embed-resources\n\npandoc --embed-resources\n  to: html\n  output-file: notebook.html\n  standalone: true\n  embed-resources: true\n  section-divs: true\n  html-math-method: mathjax\n  wrap: none\n  default-image-extension: png\n  toc: true\n  \nmetadata\n  document-css: false\n  link-citations: true\n  date-format: long\n  lang: en\n  title: This title goes at the top of the page\n  linkcolor: salmon\n  theme: cosmo\n  \nOutput created: notebook.html"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "This is your homepage",
    "section": "",
    "text": "Welcome"
  },
  {
    "objectID": "quarto-markdown.html",
    "href": "quarto-markdown.html",
    "title": "This is a Quarto markdown file",
    "section": "",
    "text": "When was this run?\nfrom datetime import datetime\n\nupdated_at = datetime.now().strftime(\"%X %x\")\nprint(\"This was run at\", updated_at)\n\nThis was run at 20:15:29 06/21/23"
  },
  {
    "objectID": "quarto-markdown.html#analysis",
    "href": "quarto-markdown.html#analysis",
    "title": "This is a Quarto markdown file",
    "section": "Analysis",
    "text": "Analysis\n\nReading in our data\nLet’s analyze temperature data from NASA Goddard.\n\nimport pandas as pd\n\ndf = pd.read_csv(\"temperatures.csv\", parse_dates=['Date'])\ndf.head()\n\n\n\n\n\n\n\n\nDate\nAnomaly\n\n\n\n\n0\n1880-01-01\n-0.30\n\n\n1\n1880-02-01\n-0.21\n\n\n2\n1880-03-01\n-0.18\n\n\n3\n1880-04-01\n-0.27\n\n\n4\n1880-05-01\n-0.14\n\n\n\n\n\n\n\n\n\nLooking at the most recent data\n\ndf.tail(10)\n\n\n\n\n\n\n\n\nDate\nAnomaly\n\n\n\n\n1634\n2016-03-01\n1.30\n\n\n1635\n2016-04-01\n1.09\n\n\n1636\n2016-05-01\n0.93\n\n\n1637\n2016-06-01\n0.76\n\n\n1638\n2016-07-01\n0.83\n\n\n1639\n2016-08-01\n0.98\n\n\n1640\n2016-09-01\n0.87\n\n\n1641\n2016-10-01\n0.89\n\n\n1642\n2016-11-01\n0.93\n\n\n1643\n2016-12-01\n0.81"
  },
  {
    "objectID": "quarto-markdown.html#visualization",
    "href": "quarto-markdown.html#visualization",
    "title": "This is a Quarto markdown file",
    "section": "Visualization",
    "text": "Visualization\nWe’re going to use resample to take the mean change over every 10-year period.\n\ndf.resample('10A', on='Date').Anomaly.mean().plot()\n\n&lt;AxesSubplot:xlabel='Date'&gt;"
  },
  {
    "objectID": "observable.html",
    "href": "observable.html",
    "title": "This will be Observable JS content",
    "section": "",
    "text": "Temperature data comes from NASA Goddard.\ntemps = FileAttachment(\"temperatures.csv\").csv({typed: true})\ntemps"
  },
  {
    "objectID": "observable.html#a-simple-plot",
    "href": "observable.html#a-simple-plot",
    "title": "This will be Observable JS content",
    "section": "A simple plot",
    "text": "A simple plot\nAnd here is our plot.\n\n\nCode\nPlot.plot({\n  color: {scheme: \"BuRd\"},\n  marks: [\n    Plot.ruleY([0]),\n    Plot.dot(temps, {x: \"Date\", y: \"Anomaly\", stroke: \"Anomaly\"}),\n  ]\n})"
  },
  {
    "objectID": "observable.html#a-fancier-plot",
    "href": "observable.html#a-fancier-plot",
    "title": "This will be Observable JS content",
    "section": "A fancier plot",
    "text": "A fancier plot\nWe’ll use a rolling input window to show off the power of Observable Plot.\n\nviewof rolling = Inputs.select([6, 12, 24, 36, 60, 120], {\n    value: 12,\n    format: o =&gt; `${o} months`,\n    label: \"Rolling window\"\n})\n\n\n\n\n\n\n\n\nCode\nPlot.plot({\n  color: {scheme: \"BuRd\"},\n  marks: [\n    Plot.ruleY([0]),\n    Plot.dot(temps, {x: \"Date\", y: \"Anomaly\", stroke: \"Anomaly\"}),\n    Plot.lineY(temps, Plot.windowY(rolling, {x: \"Date\", y: \"Anomaly\"}))\n  ]\n})"
  },
  {
    "objectID": "python-and-r.html",
    "href": "python-and-r.html",
    "title": "Combining Python and R",
    "section": "",
    "text": "We’ll use R’s reticulate library to connect the two languages.\n\nlibrary(reticulate)\n\nImport the data using pandas…\n\nimport pandas as pd\n\ndf = pd.read_csv(\"temperatures.csv\", parse_dates=['Date'])\ndf.head()\n\n        Date  Anomaly\n0 1880-01-01    -0.30\n1 1880-02-01    -0.21\n2 1880-03-01    -0.18\n3 1880-04-01    -0.27\n4 1880-05-01    -0.14\n\n\n…and graph it using ggplot.\n\nlibrary(ggplot2)\n\nggplot(py$df,aes(Date, Anomaly, group=1)) +\n    geom_line()"
  }
]